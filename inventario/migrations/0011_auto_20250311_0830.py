# Generated by Django 5.1.2 on 2025-03-11 11:30

from django.db import migrations
from django.contrib.auth.models import User
from django.contrib.auth.hashers import make_password

def load_campi(apps, schema_editor):
    Campus = apps.get_model("inventario","Campus") 
    
    campi = ["Apodi",
    "Caicó",
    "Canguaretama",
    "Ceará-Mirim",
    "Currais Novos",
    "Ipanguaçu",
    "João Câmara",
    "Jucurutu",
    "Lajes",
    "Macau",
    "Mossoró",
    "Natal-Central",
    "Natal-Centro Histórico",
    "Natal-Zona Leste",
    "Natal-Zona Norte",
    "Nova Cruz",
    "Parelhas",
    "Parnamirim",
    "Pau dos Ferros",
    "Santa Cruz",
    "São Gonçalo do Amarante",
    "São Paulo do Potengi",
    "Reitoria"]
    
    for c in campi:
        campus = Campus()
        campus.campus = c
        campus.save()
        
        
def load_categorias(apps, schema_editor):
    Categoria = apps.get_model("inventario","Categoria") 
    
    categorias = ["Agitadores",
    "Balança",
    "Capela",
    "Centrífuga",
    "Dececadores",
    "Estufas",
    "Forno",
    "Freezer",
    "Vidrarias"]
    
    for c in categorias:
        categoria = Categoria()
        categoria.nome = c
        categoria.save()
        

def load_inventario(apps, schema_editor):
    Inventario = apps.get_model("inventario","Inventario") 
    
    inventario = [
        ["pipeta", "2030-03-20", 50, "Sim", "Pipeta de 250ml", "SuperGlass", "Novo", 1, 9],
        ["pipeta", "2030-03-20", 50, "Sim", "Pipeta de 250ml", "SuperGlass", "Novo", 3, 9],
        ["pipeta", "2030-03-20", 50, "Sim", "Pipeta de 250ml", "SuperGlass", "Novo", 5, 9],
        ["pipeta", "2030-03-20", 50, "Sim", "Pipeta de 250ml", "SuperGlass", "Novo", 7, 9],
        ["pipeta", "2030-03-20", 50, "Sim", "Pipeta de 250ml", "SuperGlass", "Novo", 9, 9],
        ["pipeta", "2030-03-20", 50, "Sim", "Pipeta de 500ml", "SuperGlass", "Novo", 1, 9],
        ["pipeta", "2030-03-20", 50, "Sim", "Pipeta de 250ml", "SuperGlass", "Novo", 3, 9],
        ["pipeta", "2030-03-20", 50, "Sim", "Pipeta de 250ml", "SuperGlass", "Novo", 5, 9],
        ["pipeta", "2030-03-20", 50, "Sim", "Pipeta de 250ml", "SuperGlass", "Novo", 7, 9],
        ["pipeta", "2030-03-20", 50, "Sim", "Pipeta de 250ml", "SuperGlass", "Novo", 9, 9],
        ["Bureta", "2040-07-02", 50, "Sim", "Bureta de 200ml", "SuperGlass", "Novo", 2, 9],
        ["Bureta", "2040-07-02", 50, "Sim", "Bureta de 200ml", "SuperGlass", "Novo", 4, 9],
        ["Bureta", "2040-07-02", 50, "Sim", "Bureta de 200ml", "SuperGlass", "Novo", 6, 9],
        ["Bureta", "2040-07-02", 50, "Sim", "Bureta de 200ml", "SuperGlass", "Novo", 8, 9],
        ["Bureta", "2040-07-02", 50, "Sim", "Bureta de 200ml", "SuperGlass", "Novo", 10, 9],
        ["Bureta", "2040-07-02", 50, "Sim", "Bureta de 400ml", "SuperGlass", "Novo", 2, 9],
        ["Bureta", "2040-07-02", 50, "Sim", "Bureta de 400ml", "SuperGlass", "Novo", 4, 9],
        ["Bureta", "2040-07-02", 50, "Sim", "Bureta de 400ml", "SuperGlass", "Novo", 6, 9],
        ["Bureta", "2040-07-02", 50, "Sim", "Bureta de 400ml", "SuperGlass", "Novo", 8, 9],
        ["Bureta", "2040-07-02", 50, "Sim", "Bureta de 400ml", "SuperGlass", "Novo", 10, 9],
        ["Bureta", "2040-07-02", 50, "Sim", "Bureta de 400ml", "SuperGlass", "Novo", 12, 9],
        ["Bureta", "2040-07-02", 50, "Sim", "Bureta de 400ml", "SuperGlass", "Novo", 14, 9],
        ["Bureta", "2040-07-02", 50, "Sim", "Bureta de 400ml", "SuperGlass", "Novo", 16, 9],
        ["Bureta", "2040-07-02", 50, "Sim", "Bureta de 400ml", "SuperGlass", "Novo", 18, 9],
        ]
    
    for i in inventario:
        inventario = Inventario()
        inventario.nome = i[0]
        inventario.validade = i[1]
        inventario.quantidade = i[2]
        inventario.disponivel = i[3]
        inventario.descricao = i[4]
        inventario.marca = i[5]
        inventario.estado_de_uso = i[6]
        inventario.campus_id = i[7]
        inventario.categoria_id = i[8]
        inventario.save()
        
def load_superuser(apps, schema_editor):
    # Superuser = apps.get_model("users.User") 
    
    list = [
        ["marcelo@quitroca.com", "marcelo", "Marcelo", True, True, "123"],
        ["mariany@quitroca.com", "mariany", "Mariany", True, True, "123"],
        ["Ana@quitroca.com", "ana", "Ana", True, True, "123"],
        ["Laizi@quitroca.com", "laizi", "Laizi", True, True, "123"],
        ["Victor@quitroca.com", "victor", "Victor", True, True, "123"],
        ["Lauanny@quitroca.com", "lauanny", "Lauanny", True, True, "123"],
        ["Vinicios@quitroca.com", "vinicios", "Vinicios", True, True, "123"],
        ]
    
    for i in list:
        superuser = User()
        superuser.email = i[0]
        superuser.username = i[1]
        superuser.first_name = i[2]
        superuser.is_staff = i[3]
        superuser.is_superuser = i[4]
        superuser.password = make_password(i[5])
        superuser.save()
        
        
def load_user(apps, schema_editor):
    Usuario = apps.get_model("inventario", "Usuario") 
    
    list = [
        ["2133081", 10, "Docente",1, "2014.2"],
        ["20221114010026", 15, "Discente", 2, "2022.1"],
        ["20221114010045", 4, "Discente", 3, "2022.1"],
        ["20221114010002", 8, "Discente", 4, "2022.1"],
        ["20221114010004", 3, "Discente", 5, "2022.1"],
        ["20221114010062", 1, "Discente", 6, "2022.1"],
        ["20221114010056", 5, "Discente", 7, "2022.1"],
        ]
    
    for i in list:
        user = Usuario()
        user.matricula = i[0]
        user.campus_id = i[1]
        user.status = i[2]
        user.user_id = i[3]
        user.ingresso = i[4]
        user.save()
        
def load_status(apps, schema_editor):
    Status = apps.get_model("inventario","Status") 
    
    list = ["Salvo",
    "Pendente",
    "Andamento",
    "Concluído",
    "Cancelado"]
    
    for c in list:
        status = Status()
        status.status = c
        status.save()        
      
                
class Migration(migrations.Migration):

    dependencies = [
        ('inventario', '0010_merge_20250225_0938'),
    ]

    operations = [
        migrations.RunPython(load_campi),
        migrations.RunPython(load_categorias),
        migrations.RunPython(load_inventario),
        migrations.RunPython(load_superuser),
        migrations.RunPython(load_user),
        migrations.RunPython(load_status),
    ]
